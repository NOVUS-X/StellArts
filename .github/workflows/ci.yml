name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  PYTHON_VERSION: 3.11

jobs:
  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black ruff
        pip install -r requirements.txt
    
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 app/ --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings
        flake8 app/ --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics
    
    - name: Lint with ruff
      run: ruff check app/
    
    - name: Check formatting with black
      run: black --check app/

  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: stellarts
          POSTGRES_PASSWORD: stellarts_test
          POSTGRES_DB: stellarts_test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run tests
      env:
        DATABASE_URL: postgresql://stellarts:stellarts_test@localhost:5432/stellarts_test_db
        SECRET_KEY: test-secret-key
        DEBUG: True
      run: |
        pytest app/tests/ -v --cov=app --cov-report=xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  docker:
    runs-on: ubuntu-latest
    needs: [lint, test]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker image
      run: |
        docker build -t stellarts-api:test .
    
    - name: Test Docker image
      run: |
        # Create a test network
        docker network create test-network
        
        # Start PostgreSQL
        docker run -d --name test-db --network test-network \
          -e POSTGRES_USER=stellarts \
          -e POSTGRES_PASSWORD=stellarts_test \
          -e POSTGRES_DB=stellarts_test_db \
          postgres:15-alpine
        
        # Wait for PostgreSQL to be ready
        sleep 10
        
        # Start the API
        docker run -d --name test-api --network test-network \
          -e DATABASE_URL=postgresql://stellarts:stellarts_test@test-db:5432/stellarts_test_db \
          -e SECRET_KEY=test-secret-key \
          -e DEBUG=True \
          -p 8000:8000 \
          stellarts-api:test
        
        # Wait for API to start
        sleep 10
        
        # Test the health endpoint
        curl -f http://localhost:8000/api/v1/health || exit 1
        
        # Cleanup
        docker stop test-api test-db
        docker rm test-api test-db
        docker network rm test-network
